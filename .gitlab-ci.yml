##
# Build the docker image then run all linter, test, etc in parallel steps.
##
stages:
  - build-docker-image
  - test-and-validate

##
# Build a development version of the Docker image.  This image will
# be used in later stages such as running tests, linter, etc.
##
build-dev-docker-image:
  stage: build-docker-image
  image: docker:19.03.7

  services:
    - docker:19.03.7-dind
 
  variables:
    DOCKER_DRIVER: overlay2

  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
    - docker pull $CI_REGISTRY_IMAGE || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

##
# Run the linter, tests, etc on the development Docker image.  We don't
# need to pull down the code since the Docker image already has everything
# it needs (i.e. GIT_STRATEGY: none).  Also note that by default GitLab
# will default to the /build directory in the image so we need to switch to /app.
##
run-linter:
  variables:
    GIT_STRATEGY: none
  stage: test-and-validate
  image:
    name: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    entrypoint: [""]

  script:
    - cd /app
    - rake standard

run-type-checking:
  variables:
    GIT_STRATEGY: none
  stage: test-and-validate
  image: 
    name: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    entrypoint: [""]

  script:
    - cd /app
    - srb tc

# Run the tests with coverage.
run-tests:
  variables:
    GIT_STRATEGY: none
    POSTGRES_PASSWORD: password1234
  stage: test-and-validate
  image: 
    name: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    entrypoint: [""]

  services:
    - name: postgres:12.1
      alias: db

  artifacts:
    paths:
      - coverage/

  # GitLab artifacts must exist under the /build/<Project> directory.
  # Since we don't do a Git Clone because the code is already in the Docker
  # image we need to move the coverage items.
  script:
    - cd /app
    - RAILS_ENV=test rails db:create
    - RAILS_ENV=test rails db:schema:load
    - rails test
    - mv tmp/coverage $CI_PROJECT_DIR/coverage